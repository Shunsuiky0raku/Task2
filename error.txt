emailstack.cpp: In member function ‘Email EmailStack::pop()’:
emailstack.cpp:18:28: error: could not convert ‘<brace-enclosed initializer list>()’ from ‘<brace-enclosed initializer list>’ to ‘Email’
   18 |     if (isEmpty()) return {}; // Return empty email if stack is empty
      |                            ^
      |                            |
      |                            <brace-enclosed initializer list>
emailstack.cpp: In member function ‘Email EmailStack::pop()’:
emailstack.cpp:18:28: error: could not convert ‘<brace-enclosed initializer list>()’ from ‘<brace-enclosed initializer list>’ to ‘Email’
   18 |     if (isEmpty()) return {}; // Return empty email if stack is empty
      |                            ^
      |                            |
      |                            <brace-enclosed initializer list>
emailstack.cpp: In member function ‘Email* EmailStack::getEmails(int&) const’:
emailstack.cpp:43:36: error: no matching function for call to ‘Email::Email()’
   43 |     Email* emails = new Email[count];
      |                                    ^
emailstack.cpp: In member function ‘Email* EmailStack::getEmails(int&) const’:
emailstack.cpp:43:36: error: no matching function for call to ‘Email::Email()’
   43 |     Email* emails = new Email[count];
      |                                    ^
In file included from emailstack.hpp:4,
                 from emailstack.cpp:1:
email.hpp:17:5: note: candidate: ‘Email::Email(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   17 |     Email(std::string emailID, std::string sender, std::string recipient,
      |     ^~~~~
email.hpp:17:5: note:   candidate expects 7 arguments, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(const Email&)’
    6 | class Email {
      |       ^~~~~
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
In file included from emailstack.hpp:4,
                 from emailstack.cpp:1:
email.hpp:17:5: note: candidate: ‘Email::Email(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   17 |     Email(std::string emailID, std::string sender, std::string recipient,
      |     ^~~~~
email.hpp:17:5: note:   candidate expects 7 arguments, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(const Email&)’
    6 | class Email {
      |       ^~~~~
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(Email&&)’
email.hpp:6:7: note: candidate: ‘Email::Email(Email&&)’
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
emailqueue.cpp: In member function ‘Email EmailQueue::dequeue()’:
emailqueue.cpp:23:28: error: could not convert ‘<brace-enclosed initializer list>()’ from ‘<brace-enclosed initializer list>’ to ‘Email’
   23 |     if (isEmpty()) return {}; // Return empty email if queue is empty
      |                            ^
      |                            |
      |                            <brace-enclosed initializer list>
emailqueue.cpp: In member function ‘Email EmailQueue::dequeue()’:
emailqueue.cpp:23:28: error: could not convert ‘<brace-enclosed initializer list>()’ from ‘<brace-enclosed initializer list>’ to ‘Email’
   23 |     if (isEmpty()) return {}; // Return empty email if queue is empty
      |                            ^
      |                            |
      |                            <brace-enclosed initializer list>
emailqueue.cpp: In member function ‘Email* EmailQueue::getEmails(int&) const’:
emailqueue.cpp:51:36: error: no matching function for call to ‘Email::Email()’
   51 |     Email* emails = new Email[count];
      |                                    ^
emailqueue.cpp: In member function ‘Email* EmailQueue::getEmails(int&) const’:
emailqueue.cpp:51:36: error: no matching function for call to ‘Email::Email()’
   51 |     Email* emails = new Email[count];
      |                                    ^
In file included from emailqueue.hpp:4,
                 from emailqueue.cpp:1:
email.hpp:17:5: note: candidate: ‘Email::Email(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   17 |     Email(std::string emailID, std::string sender, std::string recipient,
      |     ^~~~~
In file included from emailqueue.hpp:4,
                 from emailqueue.cpp:1:
email.hpp:17:5: note: candidate: ‘Email::Email(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   17 |     Email(std::string emailID, std::string sender, std::string recipient,
      |     ^~~~~
email.hpp:17:5: note:   candidate expects 7 arguments, 0 provided
email.hpp:17:5: note:   candidate expects 7 arguments, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(const Email&)’
    6 | class Email {
      |       ^~~~~
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(const Email&)’
    6 | class Email {
      |       ^~~~~
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(Email&&)’
email.hpp:6:7: note: candidate: ‘Email::Email(Email&&)’
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
emaillist.cpp: In member function ‘void EmailList::loadEmailsFromCSV(const std::string&)’:
emaillist.cpp:111:15: error: no matching function for call to ‘Email::Email()’
  111 |         Email email;
      |               ^~~~~
emaillist.cpp: In member function ‘void EmailList::loadEmailsFromCSV(const std::string&)’:
emaillist.cpp:111:15: error: no matching function for call to ‘Email::Email()’
  111 |         Email email;
      |               ^~~~~
In file included from emailstack.hpp:4,
                 from emaillist.hpp:3,
                 from emaillist.cpp:1:
email.hpp:17:5: note: candidate: ‘Email::Email(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   17 |     Email(std::string emailID, std::string sender, std::string recipient,
      |     ^~~~~
In file included from emailstack.hpp:4,
                 from emaillist.hpp:3,
                 from emaillist.cpp:1:
email.hpp:17:5: note: candidate: ‘Email::Email(std::string, std::string, std::string, std::string, std::string, std::string, std::string)’
   17 |     Email(std::string emailID, std::string sender, std::string recipient,
      |     ^~~~~
email.hpp:17:5: note:   candidate expects 7 arguments, 0 provided
email.hpp:17:5: note:   candidate expects 7 arguments, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(const Email&)’
    6 | class Email {
      |       ^~~~~
email.hpp:6:7: note: candidate: ‘Email::Email(const Email&)’
    6 | class Email {
      |       ^~~~~
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note: candidate: ‘Email::Email(Email&&)’
email.hpp:6:7: note: candidate: ‘Email::Email(Email&&)’
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
email.hpp:6:7: note:   candidate expects 1 argument, 0 provided
